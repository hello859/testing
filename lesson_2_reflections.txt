Using git init and git status to create a .git directory.

Git init is run first and says that an initialized empty Git repository was created in the directory which the command was run.

Git status tells a few things:
1. what branch you are on (currently master branch)
2. Number of commits made (currently none)
3. Files that are untracked - says you can used git add command to add specific files that will be tracked using git commit later on
4. lastly a msg that says what was recently add (in this case it was nothing added using the git commit command and that only untracked files are present)

part 2:
considering the differences between the staging area and the working directory.

the staging area is different to the working directory in that files are added to it from the working directory to be committed, and it is used to store which files should be committed, but not the file contents themselves. Wheareas the working directory contains the files and the files themselves - almost like a pointer the files or a list.

It is different to a respository in that it its a snapshot of the working directory or the files that are added. It is just a list to keep track of which files to commit when the command is used - like a list of addresses.

part 3:
considering how one can used the staging area to ensure one logical change per commit.

This can be done using git add to add files to be committed so that only one logical per change is done.
One can use the git diff command, without args, to compare the staging area to the working directory, to check what files are in there vs the working directory to ensure that only one change was added.
git diff --staged can then be used to ensure that the file added was not for some reason already previously added to the repository.
